                         kadmin-remctl To-Do List

 * Talking to kadmin and kpasswd via Expect is obviously an ugly hack only
   done because it was expedient.  We should instead be using an
   appropriate Perl module and a native API.  For password changing, this
   would mean enhancing the Authen::Krb5 Perl module to provide an API to
   the password changing functions to do something similar to kpasswd.
   kadmin is harder, since MIT Kerberos doesn't provide a usable API to
   the kadmin client libraries.  Authen::Krb5::Admin hacks around this by
   defining the API itself, but may not work with all versions of Kerberos
   and is fragile.

 * There is quite a bit of code duplication in kadmin-backend right now
   between the instance commands and the commands for regular principals.
   That script needs another layer of abstraction with generic account
   creation, deletion, and password reset functions.

 * kadmin-remctl currently supports instance propagation as a special
   case.  Instead, refactor the code so that the same propagation can be
   done for regular accounts with a similar configuration.

 * Rather than make password strength checking a boolean and hard-coding
   the policy name, have the password strength checking option take the
   name of the password policy to use.

 * kadmin-remctl should use Net::LDAP or Net::LDAPapi rather than calling
   the external OpenLDAP utilities.

 * The current kadmin-remctl API is rather lame and is only used for
   historical reasons at Stanford.  Introduce a new, cleaner API with
   better structure to the error reporting and replace the current API
   with that.

 * There should be an easier way of setting defaults for passwd_change
   than patching it at run-time, even though it also supports krb5.conf
   parameters.

 * kadmin-backend's check_passwd option could use the username to check
   other things, such as whether the password is based on the username
   and whether the user is reusing their current password (although it
   still couldn't be guaranteed to match every error from change_passwd).
