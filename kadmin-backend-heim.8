.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "KADMIN-BACKEND-HEIM 8"
.TH KADMIN-BACKEND-HEIM 8 "2010-07-21" "3.1" "kadmin-remctl"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
kadmin\-backend \- remctl interface to kadmin functionality
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBkadmin-backend\fR change_passwd \fIuser\fR \fIold\fR \fInew\fR
.PP
\&\fBkadmin-backend\fR check_expire \fIuser\fR [expire | pwexpire]
.PP
\&\fBkadmin-backend\fR check_passwd \fIuser\fR \fIpassword\fR
.PP
\&\fBkadmin-backend\fR create \fIuser\fR \fIpassword\fR (enabled | disabled)
.PP
\&\fBkadmin-backend\fR (delete | disable | enable | examine) \fIuser\fR
.PP
\&\fBkadmin-backend\fR expiration \fIuser\fR (\fIdate\fR | now | never)
.PP
\&\fBkadmin-backend\fR pwexpiration \fIuser\fR (\fIdate\fR | now | never)
.PP
\&\fBkadmin-backend\fR (reset_passwd | reset) \fIuser\fR \fIpassword\fR
.PP
\&\fBkadmin-backend\fR instance check \fIuser\fR \fIinstance\fR
.PP
\&\fBkadmin-backend\fR instance create \fIuser\fR \fIinstance\fR \fIpassword\fR
.PP
\&\fBkadmin-backend\fR instance delete \fIuser\fR \fIinstance\fR
.PP
\&\fBkadmin-backend\fR instance list \fIinstance\fR
.PP
\&\fBkadmin-backend\fR instance reset \fIuser\fR \fIinstance\fR \fIpassword\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script provides an interface to the same functionality provided by
\&\fBkadmin\fR, but it also takes appropriate action to synchronize changes
with the \s-1AFS\s0 kaserver Kerberos v4 realm and with Active Directory where
appropriate or necessary.  It also provides some additional functions that
\&\fBkadmin\fR doesn't provide directly and has separate functions for handling
account instances (principals in the form \fIprincipal\fR/\fIinstance\fR).
.PP
All of these functions except for \f(CW\*(C`examine\*(C'\fR and the \f(CW\*(C`instance\*(C'\fR functions
by default only accept principals with no instances or realms, and that
consist of three to eight characters starting with a lowercase letter and
containing only digits and lowercase letters.  This can be overridden in
the configuration.  \f(CW\*(C`instance\*(C'\fR functions require a principal that fits
the same requirements and an instance that starts with a letter and
contains only lowercase alphanumeric characters.  Principals may also be
rejected if they're reserved, and explicit configuration is required for
each instance (including the empty instance, for principals without an
instance).
.PP
Whether an action will be performed in Kerberos v5, Active Directory, or
an \s-1AFS\s0 kaserver Kerberos v4 realm or some combination of the three is
determined by the configuration.
.PP
The \f(CW\*(C`instance\*(C'\fR functions should only be used to manage instances that
have regular passwords.  Instances used by automated processes via keytabs
should be managed via a different mechanism.  All \f(CW\*(C`instance\*(C'\fR functions
support additional \s-1ACL\s0 checking beyond the authorization rules of
\&\fBremctld\fR to verify that the remote user is allowed to manage that
particular instance.
.PP
The \f(CW\*(C`change_passwd\*(C'\fR function changes a user's password given the current
password.  It is equivalent to \fBkpasswd\fR but only works on the restricted
set of users as described above.
.PP
The \f(CW\*(C`check_expire\*(C'\fR function returns the expiration time for either the
account (when given the \f(CW\*(C`expire\*(C'\fR argument) or the password (when given
the \f(CW\*(C`pwexpire\*(C'\fR argument) in \s-1ISO\s0 8601 format (YYYY-MM-DD \s-1HH:MM:SSZ\s0).  If
neither argument is given, the nearest expiration date is displayed.  The
time is always in the \s-1UTC\s0 time zone.  If the account or password does not
expire, the output will be empty.
.PP
The \f(CW\*(C`check_passwd\*(C'\fR function performs strength checking against the given
password without changing the password.  \fIuser\fR is required for backward
compatibility but is ignored.  This function will exit successfully (exit
status of 0) regardless of whether the password is acceptable; a non-zero
exit status is only used for an internal error.  If the password is
acceptable, there is no output; if the password is not acceptable, the
reason for its rejection is printed to standard output prefixed with
\&\f(CW\*(C`retstr:\*(C'\fR and a space.
.PP
The \f(CW\*(C`create\*(C'\fR function creates a new principal with the given password.
If the third argument is \f(CW\*(C`enabled\*(C'\fR, the new account is created enabled.
If \f(CW\*(C`disabled\*(C'\fR, the new account is created with \s-1DISALLOW_ALL_TIX\s0 set in
Kerberos v5, \s-1NOTGS\s0 in the \s-1AFS\s0 kaserver, and a userAccountControl of 514 in
Active Directory.
.PP
The \f(CW\*(C`delete\*(C'\fR function deletes the given principal.
.PP
The \f(CW\*(C`disable\*(C'\fR function sets \s-1DISALLOW_ALL_TIX\s0 on the principal in Kerberos
v5, \s-1NOTGS\s0 in the \s-1AFS\s0 kaserver, or a userAccountControl of 514 in Active
Directory.
.PP
The \f(CW\*(C`enable\*(C'\fR function clears \s-1DISALLOW_ALL_TIX\s0 on the principal in Kerberos
v5, \s-1NOTGS\s0 in the \s-1AFS\s0 kaserver, or sets a userAccountControl of 512 in
Active Directory.
.PP
The \f(CW\*(C`examine\*(C'\fR function prints out information about the principal in
Kerberos v5 and, if configured, the \s-1AFS\s0 kaserver.  It does not support
Active Directory.  This is the only function that accepts principals with
instances.  If \s-1AFS\s0 kaserver support is configured, it attempts to convert
principals with an instance into their Kerberos v4 equivalent before
looking them up there.  The output format for the \s-1AFS\s0 kaserver is the same
as the old Kerberos v4 \fBkadmin\fR output, and the output for Kerberos v5 is
the result of \fBkadmin getprinc\fR.  A line of 40 dashes separates the first
from the second if \s-1AFS\s0 kaserver support is configured.
.PP
The \f(CW\*(C`expiration\*(C'\fR function changes the expiration date of a principal.
This is not propagated into an \s-1AFS\s0 kaserver or into Active Directory.  The
expiration date may be \f(CW\*(C`now\*(C'\fR, \f(CW\*(C`never\*(C'\fR, or something that can be parsed
by the date parsing routines.  Using the YYYY-MM-DD \s-1HH:MM:SS\s0 format is
recommended.
.PP
The \f(CW\*(C`help\*(C'\fR function prints out a summary of supported functions and their
arguments.
.PP
The \f(CW\*(C`pwexpiration\*(C'\fR function changes the expiration date of a principal's
password.  Unlike an account expiration, this expiration date will be
pushed forward when the user changes their password.  This is not
propagated into an \s-1AFS\s0 kaserver or into Active Directory.  The expiration
date may be \f(CW\*(C`now\*(C'\fR, \f(CW\*(C`never\*(C'\fR, or something that can be parsed by the date
parsing routines.  Using the YYYY-MM-DD \s-1HH:MM:SS\s0 format is recommended.
.PP
The \f(CW\*(C`reset_passwd\*(C'\fR function changes the password for a given principal
without requiring knowledge of the old password.  Changing the password of
a user who can themselves reset passwords is not permitted.  \f(CW\*(C`reset\*(C'\fR is
supported as a synonym (used primarily with a separate password reset
service).
.PP
The \f(CW\*(C`instance check\*(C'\fR function prints a message and returns 0 if that
combination of principal and instance exists, or a different message and
returns 1 if the instance does not exist.
.PP
The \f(CW\*(C`instance create\*(C'\fR function creates a new \fIprincipal\fR/\fIinstance\fR
Kerberos principal, provided that it doesn't already exist, and sets its
password to the provided password.  This principal may or may not have
password checking enabled, depending on the configuration for that instance.
.PP
The \f(CW\*(C`instance delete\*(C'\fR function deletes a \fIprincipal\fR/\fIinstance\fR Kerberos
principal.
.PP
The \f(CW\*(C`instance list\*(C'\fR function lists all Kerberos principals with the given
instance.  This function only supports Kerberos v5, not Active Directory.
Note that this list may contain service principals and other reserved
principals that cannot be managed through this interface.
.PP
The \f(CW\*(C`instance reset\*(C'\fR function resets the password for a given
\&\fIprincipal\fR/\fIinstance\fR Kerberos principal, provided that password resets
are allowed for that instance type in the \fBkadmin-backend\fR configuration.
.PP
This script is normally run via \fBremctld\fR with different ACLs on each
supported function.  \f(CW\*(C`reset_passwd\*(C'\fR is a special case and should normally
be run via a separate instance of \fBremctld\fR listening on a different port
and using a principal for authentication that disallows TGT-based service
tickets and has a short lifetime.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
If the file \fI/etc/kadmin\-remctl.conf\fR exists, \fBkadmin-backend\fR will load
it after setting its configuration defaults.  This file must be used to
configure \fBkadmin-backend\fR; without configuration, it will not take any
actions for most functions.  The configuration file must be valid Perl
syntax and should normally consist only of variable settings.  The
following Perl variables may be set:
.ie n .IP "%CONFIG" 4
.el .IP "\f(CW%CONFIG\fR" 4
.IX Item "%CONFIG"
This is the general configuration for how each type of principal should be
handled.  Every instance managed by this installation of \fBkadmin-backend\fR
needs to be configured here.  Each key of this hash should be the name of
an instance (possibly \f(CW\*(Aq\*(Aq\fR for the empty instance).  The values for a key
of \f(CW\*(Aq\*(Aq\fR will be used when examining principals with unknown instances,
and if there is no configuration for \f(CW\*(Aq\*(Aq\fR, examining such principals will
not be allowed.
.Sp
Each value should be a hash containing one or more of the following keys:
.RS 4
.IP "ad_config" 2
.IX Item "ad_config"
Points to an OpenLDAP configuration file that's used for propagation of
instance creation into Active Directory.  If this key isn't set for an
instance, no propagation into Active Directory will be attempted.  This
configuration file should set the \s-1LDAP\s0 server and any other required
properties.  An example:
.Sp
.Vb 4
\&    URI ldaps://dc1.example.org/
\&    BASE ou=accounts,dc=windows,dc=example,dc=org
\&    TLS_CACERT /etc/krb5kdc/ad\-root\-cert
\&    SASL_SECPROPS minssf=0,maxssf=0
.Ve
.Sp
See \fIldap.conf\fR\|(5) for the available options.
.Sp
Only GSS-API binds are supported by \fBkadmin-backend\fR at this time.
.Sp
The above \s-1SASL_SECPROPS\s0 settings are required if you want to set passwords
via the \s-1LDAP\s0 interface.  Active Directory requires \s-1TLS\s0 be used when
setting passwords over \s-1LDAP\s0 and does not allow a \s-1SASL\s0 security layer to be
negotiated when \s-1TLS\s0 is in use.  The above settings configure \s-1TLS\s0 and
disable negotiation of a \s-1SASL\s0 security layer.
.Sp
Even this doesn't work with Windows Server 2008, which rejects all GSS-API
binds over \s-1TLS\s0.  For that version, change the \s-1URI\s0 to \f(CW\*(C`ldap\*(C'\fR instead of
\&\f(CW\*(C`ldaps\*(C'\fR and remove the \s-1TLS\s0 and \s-1SASL_SECPROPS\s0 configuration.  This will do
straight GSS-API binds with a \s-1SASL\s0 security layer.  Then, set ad_setpass
as mentioned below so that password changes are done via the Kerberos set
password protocol.
.IP "ad_group" 2
.IX Item "ad_group"
Contains the \s-1DN\s0 of an Active Directory authorization group to which all
created principals of the given instance should be added automatically on
creation.  The addition will be done by modifying the group identified by
that \s-1DN\s0 to add a new \f(CW\*(C`member\*(C'\fR attribute equal to the \s-1DN\s0 of the newly
created account.
.IP "ad_keytab" 2
.IX Item "ad_keytab"
Points to a keytab used to obtain credentials for Active Directory
modifications.  This keytab will be used with \fBk5start\fR to obtain
Kerberos credentials when running \s-1LDAP\s0 commands.  If ad_config is set,
this key is required.
.IP "ad_ldif" 2
.IX Item "ad_ldif"
Points to a Text::Template template file containing the complete \s-1LDIF\s0
required to create a new entry in Active Directory for an account with the
given instance.  See Text::Template for the details of the format, but
mostly all you'll need to do is include strings like \f(CW\*(C`{$principal}\*(C'\fR into
the file where you want to substitute in the username.  The available
variables are:
.Sp
.Vb 4
\&    principal   The base username (without any instance)
\&    instance    The instance of the account
\&    password    The base64\-encoded password for the account
\&    control     The userAccountControl setting
.Ve
.Sp
For example, this file may contain:
.Sp
.Vb 7
\&    dn: cn={$principal}/{$instance},ou=Accounts,dc=example,dc=org
\&    objectClass: user
\&    cn: {$user}/{$instance}
\&    sAMAccountName: {$principal}/{$instance}
\&    userAccountControl: {$control}
\&    unicodePwd:: {$password}
\&    userPrincipalName: {$principal}/{$instance}@EXAMPLE.ORG
.Ve
.Sp
For account creation, the entire template is used.  For account deletion
and modifications, only the line starting with \f(CW\*(C`dn:\*(C'\fR (and any \s-1LDIF\s0
continuation lines) is extracted and the contents, after template
resolution, are used as the \s-1DN\s0 to delete from Active Directory.
.Sp
If you don't have \s-1TLS\s0 set up so that you can set unicodePwd over the \s-1LDAP\s0
interface, set ad_setpass as described below.
.IP "ad_realm" 2
.IX Item "ad_realm"
The realm of the Active Directory environment.  If this is set,
\&\fBksetpass\fR calls are qualified with this realm and \fBk5start\fR is told to
authenticate to this realm when making \s-1LDAP\s0 calls.  If the keytab used for
Active Directory is a keytab in your local non-AD Kerberos realm and
you're using cross-realm authentication with Active Directory, don't set
this key.
.IP "ad_setpass" 2
.IX Item "ad_setpass"
If this is set, accounts are created in Active Directory disabled and
without a password, the password is set with \fBksetpass\fR, and then the
account is enabled.  This is necessary if your Active Directory doesn't
permit GSS-API authentication over \s-1TLS\s0.
.IP "afs_admin" 2
.IX Item "afs_admin"
Principal to use for \s-1AFS\s0 kaserver operations.  If this key is not set, no
propagation of operations to an \s-1AFS\s0 kaserver environment is attempted.
.IP "afs_fake" 2
.IX Item "afs_fake"
Controls how the Kerberos v4 examine output is constructed.  If this key
is set to a true value, \fBkadmin-backend\fR will create fake Kerberos v4
kadmin examine output based on the Kerberos v5 output, even if \s-1AFS\s0
kaserver integration is otherwise configured.  This is probably only of
interest at Stanford University to support an old \s-1API\s0.
.IP "afs_srvtab" 2
.IX Item "afs_srvtab"
Srvtab to use for \s-1AFS\s0 kaserver authentication.
.IP "acl" 2
.IX Item "acl"
The value is the \s-1ACL\s0 file listing the principals that can manage instances
of this type.  This option must be set and should contain a simple list of
fully-qualified principals, one per line, or lines in the form:
.Sp
.Vb 1
\&    include /path/to/another/file
.Ve
.Sp
which are processed recursively.
.IP "allowed" 2
.IX Item "allowed"
The value is a regular expression that overrides the default regular
expression used to check principals (the non-instance portion).  Be sure
that this regular expression doesn't allow an instance (instances are
handled separately) or a realm, and be sure it rejects any characters that
might confuse the shell or \fBkadmin\fR (shell metacharacters, whitespace,
and so forth).
.IP "checking" 2
.IX Item "checking"
Set to a true value if passwords for this instance should be subject to
password strength checking, false otherwise.
.IP "k5_admin" 2
.IX Item "k5_admin"
Principal to use for authentication of Kerberos v5 \fBkadmin\fR operations.
If this key is not set, no propagation of operations to an \s-1MIT\s0 Kerberos v5
\&\s-1KDC\s0 is done.  If this key is set, Kerberos v5 operations are preferred
over Active Directory operations and \fBkadmin-backend\fR assumes that
account status changes and password changes will be propagated from
Kerberos v5 to Active Directory by means other than this program.
.IP "k5_host" 2
.IX Item "k5_host"
If set, pass this argument to Kerberos v5 \fBkadmin\fR via the \fB\-s\fR flag to
tell it to use a different admin server.  Mostly useful for testing to
point \fBkadmin-backend\fR at a different kadmin server.
.IP "k5_keytab" 2
.IX Item "k5_keytab"
Keytab to use for authentication of Kerberos v5 \fBkadmin\fR operations.
.IP "locked" 2
.IX Item "locked"
Set to an array containing a program (and its required arguments) to use
to check if an instance is locked.  'Locked' means that the instance
cannot be enabled again using this interface for some policy reason.  If
the array is undefined or empty, there is no checking for locked status.
.IP "reset" 2
.IX Item "reset"
Set to a true value if \fBkadmin-backend\fR should support resetting
passwords for this instance (via the \f(CW\*(C`instance reset\*(C'\fR function), false
otherwise.
.RE
.RS 4
.RE
.ie n .IP "$K5_KADMIN" 4
.el .IP "\f(CW$K5_KADMIN\fR" 4
.IX Item "$K5_KADMIN"
Path to the regular \s-1MIT\s0 Kerberos v5 \fBkadmin\fR command-line client.  Most
operations are done by running this client interactively under Expect.
.ie n .IP "$K5_KPASSWD" 4
.el .IP "\f(CW$K5_KPASSWD\fR" 4
.IX Item "$K5_KPASSWD"
Path to the Kerberos v5 \fBkpasswd\fR command-line client, which is used to
implement the \f(CW\*(C`change_passwd\*(C'\fR function.
.ie n .IP "$K5START" 4
.el .IP "\f(CW$K5START\fR" 4
.IX Item "$K5START"
Path to \fBk5start\fR, used to obtain credentials when propagating accounts
into Active Directory.  By default, \fBkadmin-backend\fR searches the \s-1PATH\s0 for
the first \fBk5start\fR binary found.
.ie n .IP "$KASETKEY" 4
.el .IP "\f(CW$KASETKEY\fR" 4
.IX Item "$KASETKEY"
Path to \fBkasetkey\fR, used to make changes to an \s-1AFS\s0 kaserver.  By default,
\&\fBkadmin-backend\fR searches the \s-1PATH\s0 for the first \fBkasetkey\fR binary
found.
.ie n .IP "$KSETPASS" 4
.el .IP "\f(CW$KSETPASS\fR" 4
.IX Item "$KSETPASS"
Path to \fBksetpass\fR, used to set passwords in Active Directory.  By
default, \fBkadmin-backend\fR searches the \s-1PATH\s0 for the first \fBksetpass\fR
binary found.
.ie n .IP "$LDAPADD" 4
.el .IP "\f(CW$LDAPADD\fR" 4
.IX Item "$LDAPADD"
Path to \fBldapadd\fR, used to create new accounts in Active Directory.  By
default, \fBkadmin-backend\fR searches the \s-1PATH\s0 for the first \fBldapadd\fR binary
found.
.ie n .IP "$LDAPDELETE" 4
.el .IP "\f(CW$LDAPDELETE\fR" 4
.IX Item "$LDAPDELETE"
Path to \fBldapdelete\fR, used to obtain credentials when deleting accounts
from Active Directory.  By default, \fBkadmin-backend\fR searches the \s-1PATH\s0 for
the first \fBldapdelete\fR binary found.
.ie n .IP "$LDAPMODIFY" 4
.el .IP "\f(CW$LDAPMODIFY\fR" 4
.IX Item "$LDAPMODIFY"
Path to \fBldapmodify\fR, used to add principals to Active Directory
authorization groups if the ad_group configuration option is set and to
enable and disable principals.  By default, \fBkadmin-backend\fR searches the
\&\s-1PATH\s0 for the first \fBldapmodify\fR binary found.
.ie n .IP "$LDAPSEARCH" 4
.el .IP "\f(CW$LDAPSEARCH\fR" 4
.IX Item "$LDAPSEARCH"
Path to \fBldapsearch\fR, used to check whether an account already exists in
Active Directory.  By default, \fBkadmin-backend\fR searches the \s-1PATH\s0
for the first \fBldapsearch\fR binary found.
.ie n .IP "%RESERVED" 4
.el .IP "\f(CW%RESERVED\fR" 4
.IX Item "%RESERVED"
A hash of reserved principal names (without instances).  The keys are the
principals; the value should be any true value.  If a principal is present
in this hash, \fBkadmin-backend\fR will refuse to perform any operation on
that principal or any of its instances.  You can either reset this hash
completely in the configuration file (if you do, be careful of principals
like \f(CW\*(C`kadmin\*(C'\fR and \f(CW\*(C`krbtgt\*(C'\fR) or add additional principals to it.
.ie n .IP "$RESET_ACL" 4
.el .IP "\f(CW$RESET_ACL\fR" 4
.IX Item "$RESET_ACL"
Path to the \s-1ACL\s0 file controlling who can change passwords for other users.
\&\fBkadmin-backend\fR checks the principal for which a password is being
changed against this file and refuses password changes if the target
principal is listed in this file.  This ensures that people who can change
others' passwords cannot themselves have their password changed through
that route, preventing privilege escalation.
.ie n .IP "$STRENGTH" 4
.el .IP "\f(CW$STRENGTH\fR" 4
.IX Item "$STRENGTH"
The Kerberos principal used for strength checking.  When checking the
strength of a password (the \f(CW\*(C`check_passwd\*(C'\fR function), \fBkadmin-backend\fR
attempts to change the password of this principal.  This principal should
therefore be set \s-1DISALLOW_ALL_TIX\s0 and not be used on any ACLs, since any
user with access to the \f(CW\*(C`check_passwd\*(C'\fR function can change its password to
anything they choose.
.PP
For the defaults, see the beginning of the \fBkadmin-backend\fR script.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\s-1REMOTE_USER\s0" 4
.IX Item "REMOTE_USER"
This environment variable must be set to the Kerberos principal attempting
an operation when managing instances.  The contents of this variable will
be checked against the \s-1ACL\s0 file for that instance.  This variable is
normally set by the \fBremctld\fR server.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIk5start\fR\|(1), \fIkasetkey\fR\|(8), \fIksetpass\fR\|(1), \fIldap.conf\fR\|(5), \fIldapadd\fR\|(1),
\&\fIldapdelete\fR\|(1), \fIldapmodify\fR\|(1), \fIldapsearch\fR\|(1)
.PP
This program is part of kadmin-remctl.  The current version is available
from <http://www.eyrie.org/~eagle/software/kadmin\-remctl/>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Russ Allbery <rra@stanford.edu>
